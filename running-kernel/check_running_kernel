#!/bin/bash

# check_running_kernel
# This plugin checks if the latest installed kernel is runnning or if the system needs to be rebooted

# Author: (C)2021 Thorsten Spille <thorsten@spille-edv.de>

# MIT License
#
# Copyright (c) 2021 Bash Club
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


uname=$(uname -r)
major_version=${uname:0:3}
if [[ "$uname" == *"-pve"* ]]; then
    if [[ "$(lsb_release -cs  2> /dev/null)" == "bookworm" ]]; then
        if [[ "$major_version" == "6.5" ]]; then
            filter="proxmox-kernel-${major_version}.*-signed"
            uname=${uname}-signed
        else
            filter="proxmox-kernel-${major_version}"
        fi
    else
        filter="pve-kernel-${major_version}"
    fi
elif [[ "$uname" == *"-mvebu" ]]; then
    latest_kernel=$(dpkg -l | grep -m1 linux-image-current-mvebu | rev | cut -d ' ' -f2 | rev)
else
    filter="linux-image-$major_version"
fi

if [[ "$uname" != *"-mvebu" ]]; then
    latest_kernel=$(dpkg --get-selections | grep -E $filter | grep -E "\sinstall" | sort -V | tail -1 | cut -f1 | cut -d'-' -f3-)
fi

if [[ "$latest_kernel" == "$uname" ]]; then
    echo -e "0 \"Running Kernel\" version_ok=0;1;|running_kernel=$uname;;|latest_installed_kernel=$latest_kernel;; Currently running Kernel up-to-date - OK"
else
    echo -e "1 \"Running Kernel\" version_ok=1;1;|running_kernel=$uname;;|latest_installed_kernel=$latest_kernel;; Newer Kernel version installed. Please reboot machine! - WARN"
fi
